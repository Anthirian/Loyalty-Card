package card;

/**
 * Card embedding of Company's RSA public key, in the form of modulus and exponent.
 * 
 * @author Geert Smelt
 * @author Robin Oostrum
 */
final class SupermarketRSAKey {

	private static final byte[] pubExp = { (byte) 0x01, (byte) 0x00, (byte) 0x01 };
	private static final byte[] pubMod = { 
		// TODO Dit is een 1024 bits key, halveren werkt niet door willekeurige bytes weg te halen.
		(byte) 0xab, (byte) 0x1d, (byte) 0x04, (byte) 0xfc, (byte) 0x7c, (byte) 0x42, (byte) 0x95, (byte) 0x4f, 
		(byte) 0xec, (byte) 0xb7, (byte) 0x91, (byte) 0x97, (byte) 0xe7, (byte) 0x57, (byte) 0x4d, (byte) 0x45, 
		(byte) 0x9b, (byte) 0x31, (byte) 0x6c, (byte) 0x37, (byte) 0x65, (byte) 0x01, (byte) 0xa8, (byte) 0x02, 
		(byte) 0xba, (byte) 0x0e, (byte) 0xee, (byte) 0x46, (byte) 0xb9, (byte) 0x4d, (byte) 0x4f, (byte) 0xb9, 
		(byte) 0x0c, (byte) 0x7a, (byte) 0xde, (byte) 0xe4, (byte) 0xb4, (byte) 0x15, (byte) 0x08, (byte) 0xae, 
		(byte) 0xf6, (byte) 0xe1, (byte) 0x37, (byte) 0xe3, (byte) 0xbe, (byte) 0xa6, (byte) 0xd0, (byte) 0xbb, 
		(byte) 0xd3, (byte) 0x78, (byte) 0x6e, (byte) 0xa8, (byte) 0xef, (byte) 0x52, (byte) 0xab, (byte) 0xf5, 
		(byte) 0x2e, (byte) 0x8c, (byte) 0xf6, (byte) 0xe3, (byte) 0x74, (byte) 0xd5, (byte) 0xf1, (byte) 0x52, 
		(byte) 0x15, (byte) 0x7d, (byte) 0xd6, (byte) 0x33, (byte) 0xad, (byte) 0xc4, (byte) 0xad, (byte) 0x8e, 
		(byte) 0x1e, (byte) 0xde, (byte) 0x4c, (byte) 0x0c, (byte) 0xff, (byte) 0x46, (byte) 0x05, (byte) 0xcc, 
		(byte) 0xaa, (byte) 0x5c, (byte) 0x1f, (byte) 0x9d, (byte) 0x2c, (byte) 0x48, (byte) 0x63, (byte) 0x8b, 
		(byte) 0xdd, (byte) 0x14, (byte) 0x5f, (byte) 0x0e, (byte) 0x3b, (byte) 0x84, (byte) 0x28, (byte) 0xec, 
		(byte) 0x2e, (byte) 0x2c, (byte) 0xf5, (byte) 0xe0, (byte) 0xb6, (byte) 0x49, (byte) 0x8d, (byte) 0x1f, 
		(byte) 0xe5, (byte) 0x07, (byte) 0x3c, (byte) 0x9b, (byte) 0x38, (byte) 0x46, (byte) 0x20, (byte) 0xbb, 
		(byte) 0x1f, (byte) 0x52, (byte) 0xa1, (byte) 0xab, (byte) 0x4f, (byte) 0xf3, (byte) 0x86, (byte) 0xff, 
		(byte) 0x73, (byte) 0xad, (byte) 0x7e, (byte) 0x11, (byte) 0xb5, (byte) 0x64, (byte) 0x8a, (byte) 0x11 
		};

	static byte[] getExponent() {
		return pubExp;
	}

	static byte[] getModulus() {
		return pubMod;
	}

}
